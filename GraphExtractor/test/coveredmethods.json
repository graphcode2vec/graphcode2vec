{"org.jfree.chart.text.TextAnchor":["private Object readResolve()","private TextAnchor(String)","public String toString()","public int hashCode()","public boolean equals(Object)"],"org.jfree.data.KeyedObjects":["public Comparable getKey(int)","public void addObject(Comparable, Object)","public void sortByKeys(SortOrder)","public Object getObject(int)","public Object clone()","public void removeValue(Comparable)","public List getKeys()","public void clear()","public KeyedObjects()","public int getIndex(Comparable)","public int hashCode()","public void insertValue(int, Comparable, Object)","public Object getObject(Comparable)","public void setObject(Comparable, Object)","public boolean equals(Object)","public int getItemCount()","public void removeValue(int)","public void sortByObjects(SortOrder)"],"org.jfree.data.category.DefaultCategoryDataset":["public void addValue(Number, Comparable, Comparable)","public int getRowIndex(Comparable)","public void removeColumn(int)","public DefaultCategoryDataset()","public Object clone()","public int getRowCount()","public Comparable getColumnKey(int)","public void clear()","public boolean isSelected(int, int)","public int getColumnCount()","public void setValue(double, Comparable, Comparable)","public int hashCode()","public Number getValue(int, int)","public void removeColumn(Comparable)","public boolean equals(Object)","public void setSelected(int, int, boolean)","public void removeRow(Comparable)","public void incrementValue(double, Comparable, Comparable)","public int getColumnIndex(Comparable)","public Comparable getRowKey(int)","public Number getValue(Comparable, Comparable)","public void setValue(Number, Comparable, Comparable)","public void removeValue(Comparable, Comparable)","public void fireSelectionEvent()","public void removeRow(int)","public void setSelected(int, int, boolean, boolean)","public List getRowKeys()","public List getColumnKeys()","public void clearSelection()","public void addValue(double, Comparable, Comparable)"],"org.jfree.chart.ChartColor":["public ChartColor(int, int, int)","public static Paint[] createDefaultPaintArray()"],"org.jfree.data.category.AbstractCategoryDataset":["public AbstractCategoryDataset()","public CategoryDatasetSelectionState getSelectionState()","public void setSelectionState(CategoryDatasetSelectionState)"],"org.jfree.chart.plot.PlotOrientation":["private Object readResolve()","public String toString()","public int hashCode()","private PlotOrientation(String)","public boolean equals(Object)"],"org.jfree.chart.renderer.AbstractRenderer":["public void setBasePaint(Paint, boolean)","public void setBaseSeriesVisible(boolean, boolean)","public Stroke getBaseStroke()","public void setSeriesVisibleInLegend(int, Boolean)","public void setSeriesItemLabelFont(int, Font, boolean)","public Paint getSeriesFillPaint(int)","protected boolean getTreatLegendShapeAsLine()","public Paint getItemLabelPaint(int, int, boolean)","private void readObject(ObjectInputStream)","public void setSeriesStroke(int, Stroke, boolean)","public void setBaseLegendShape(Shape)","protected Point2D calculateLabelAnchorPoint(ItemLabelAnchor, double, double, PlotOrientation)","public boolean getBaseSeriesVisible()","public Stroke getBaseOutlineStroke()","public boolean getBaseCreateEntities()","public void setBaseNegativeItemLabelPosition(ItemLabelPosition)","public Shape getBaseLegendShape()","public void notifyListeners(RendererChangeEvent)","public double getItemLabelAnchorOffset()","public void setBaseLegendTextPaint(Paint)","public boolean equals(Object)","public Shape getSeriesShape(int)","public boolean isItemLabelVisible(int, int, boolean)","public boolean getItemVisible(int, int)","public void setAutoPopulateSeriesStroke(boolean)","public void setBaseCreateEntities(boolean, boolean)","public Shape lookupLegendShape(int)","public Paint getSeriesOutlinePaint(int)","public Shape getBaseShape()","public Shape getLegendShape(int)","public void setAutoPopulateSeriesPaint(boolean)","public void setBaseLegendTextFont(Font)","public void setSeriesShape(int, Shape, boolean)","public Boolean getSeriesItemLabelsVisible(int)","public Paint getSeriesItemLabelPaint(int)","public Paint lookupSeriesFillPaint(int)","public void setSeriesPaint(int, Paint, boolean)","public void setItemLabelAnchorOffset(double)","public Font lookupLegendTextFont(int)","public boolean isSeriesVisible(int)","public void setAutoPopulateSeriesOutlinePaint(boolean)","public Boolean getSeriesCreateEntities(int)","public boolean isSeriesVisibleInLegend(int)","public boolean getAutoPopulateSeriesOutlineStroke()","public void setBaseShape(Shape, boolean)","public void setBasePaint(Paint)","public void clearSeriesStrokes(boolean)","public void setAutoPopulateSeriesFillPaint(boolean)","public void setSeriesOutlineStroke(int, Stroke, boolean)","public void setBaseFillPaint(Paint, boolean)","public ItemLabelPosition getNegativeItemLabelPosition(int, int, boolean)","public boolean getBaseSeriesVisibleInLegend()","public Paint getSeriesPaint(int)","public Paint getBaseItemLabelPaint()","public Boolean getSeriesVisibleInLegend(int)","public boolean getAutoPopulateSeriesStroke()","public Font getBaseLegendTextFont()","public Font getBaseItemLabelFont()","public int hashCode()","public Boolean getSeriesVisible(int)","public Font getLegendTextFont(int)","public ItemLabelPosition getSeriesPositiveItemLabelPosition(int)","public Paint getLegendTextPaint(int)","public void setLegendShape(int, Shape)","public Shape getItemShape(int, int, boolean)","public AbstractRenderer()","public void setSeriesOutlinePaint(int, Paint, boolean)","public void setSeriesPositiveItemLabelPosition(int, ItemLabelPosition)","public Font getSeriesItemLabelFont(int)","public void setBaseSeriesVisibleInLegend(boolean)","public Paint lookupLegendTextPaint(int)","public Font getItemLabelFont(int, int, boolean)","public void setBaseSeriesVisible(boolean)","public void setBaseOutlinePaint(Paint, boolean)","public void setAutoPopulateSeriesShape(boolean)","public void setSeriesNegativeItemLabelPosition(int, ItemLabelPosition, boolean)","public Stroke getItemStroke(int, int, boolean)","public void setBasePositiveItemLabelPosition(ItemLabelPosition, boolean)","public boolean getAutoPopulateSeriesOutlinePaint()","public void setLegendTextFont(int, Font)","public void setSeriesCreateEntities(int, Boolean, boolean)","public void removeChangeListener(RendererChangeListener)","public RenderAttributes getSelectedItemAttributes()","public void setSeriesStroke(int, Stroke)","public void setBaseOutlineStroke(Stroke, boolean)","public void setSeriesItemLabelPaint(int, Paint)","public void setSeriesOutlinePaint(int, Paint)","public boolean getAutoPopulateSeriesPaint()","public void setDataBoundsIncludesVisibleSeriesOnly(boolean)","public Paint lookupSeriesOutlinePaint(int)","public void setBaseOutlinePaint(Paint)","public void setSeriesShape(int, Shape)","public Stroke lookupSeriesOutlineStroke(int)","public boolean getItemCreateEntity(int, int, boolean)","public boolean getAutoPopulateSeriesFillPaint()","public void setBaseItemLabelPaint(Paint)","public boolean hasListener(EventListener)","public boolean isSeriesItemLabelsVisible(int)","public void setLegendTextPaint(int, Paint)","public boolean getBaseItemLabelsVisible()","public void setSeriesVisible(int, Boolean)","public boolean getDataBoundsIncludesVisibleSeriesOnly()","protected void setTreatLegendShapeAsLine(boolean)","public void setDefaultEntityRadius(int)","public void setBaseItemLabelFont(Font, boolean)","public boolean getAutoPopulateSeriesShape()","public void setBaseItemLabelsVisible(boolean)","public Paint getBaseFillPaint()","public Paint lookupSeriesPaint(int)","public ItemLabelPosition getPositiveItemLabelPosition(int, int, boolean)","public Paint getItemPaint(int, int, boolean)","public void addChangeListener(RendererChangeListener)","public ItemLabelPosition getBaseNegativeItemLabelPosition()","public Shape lookupSeriesShape(int)","public void setSeriesItemLabelPaint(int, Paint, boolean)","public void setAutoPopulateSeriesOutlineStroke(boolean)","public void setSeriesNegativeItemLabelPosition(int, ItemLabelPosition)","public void setBasePositiveItemLabelPosition(ItemLabelPosition)","public Paint getBaseLegendTextPaint()","public Stroke getSeriesStroke(int)","public void setBaseSeriesVisibleInLegend(boolean, boolean)","public Stroke getItemOutlineStroke(int, int, boolean)","public Paint getBasePaint()","public Stroke lookupSeriesStroke(int)","public void setBaseShape(Shape)","protected void fireChangeEvent()","public int getDefaultEntityRadius()","public void setSeriesFillPaint(int, Paint)","public void setSeriesVisible(int, Boolean, boolean)","public void clearSeriesPaints(boolean)","public void setBaseStroke(Stroke)","private void writeObject(ObjectOutputStream)","public Stroke getSeriesOutlineStroke(int)","public void setSeriesCreateEntities(int, Boolean)","public void setSeriesOutlineStroke(int, Stroke)","public void setSeriesPositiveItemLabelPosition(int, ItemLabelPosition, boolean)","public void setSeriesVisibleInLegend(int, Boolean, boolean)","public void setSeriesItemLabelsVisible(int, Boolean)","public void setSeriesItemLabelsVisible(int, boolean)","protected Object clone()","public void setBaseCreateEntities(boolean)","public void setSeriesItemLabelsVisible(int, Boolean, boolean)","public void setSeriesFillPaint(int, Paint, boolean)","public Paint getBaseOutlinePaint()","public Paint getItemOutlinePaint(int, int, boolean)","public Paint getItemFillPaint(int, int, boolean)","public void setBaseStroke(Stroke, boolean)","public void setBaseItemLabelPaint(Paint, boolean)","public void setBaseNegativeItemLabelPosition(ItemLabelPosition, boolean)","public void setBaseItemLabelFont(Font)","public void setBaseFillPaint(Paint)","public void setSeriesPaint(int, Paint)","public ItemLabelPosition getBasePositiveItemLabelPosition()","public ItemLabelPosition getSeriesNegativeItemLabelPosition(int)","public void setSeriesItemLabelFont(int, Font)","public void setBaseOutlineStroke(Stroke)","public void setBaseItemLabelsVisible(boolean, boolean)"],"org.jfree.chart.util.SortOrder":["private Object readResolve()","public String toString()","public int hashCode()","private SortOrder(String)","public boolean equals(Object)"],"org.jfree.chart.util.DefaultShadowGenerator":["public int getShadowSize()","public DefaultShadowGenerator()","public Color getShadowColor()","protected void applyShadow(BufferedImage)","public DefaultShadowGenerator(int, Color, float, int, double)","public int hashCode()","public BufferedImage createDropShadow(BufferedImage)","public int getDistance()","public float getShadowOpacity()","public double getAngle()","public int calculateOffsetY()","public int calculateOffsetX()","public boolean equals(Object)"],"org.jfree.chart.renderer.RenderAttributes":["public RenderAttributes(boolean)","public void setSeriesShape(int, Shape)","public Paint getDefaultOutlinePaint()","public RenderAttributes()","public void setDefaultLabelVisible(Boolean)","public Boolean getSeriesLabelVisible(int)","protected Boolean lookupSeriesCreateEntity(int)","public Paint getSeriesFillPaint(int)","protected Font lookupSeriesLabelFont(int)","protected Paint lookupSeriesOutlinePaint(int)","public void setSeriesLabelFont(int, Font)","public Shape getSeriesShape(int)","public void setSeriesLabelPaint(int, Paint)","public void setDefaultPaint(Paint)","public Paint getDefaultFillPaint()","public Paint getSeriesOutlinePaint(int)","public Shape getDefaultShape()","public void setSeriesLabelVisible(int, Boolean)","public Font getSeriesLabelFont(int)","public Paint getDefaultLabelPaint()","public Boolean getDefaultLabelVisible()","public Stroke getDefaultOutlineStroke()","protected Shape lookupSeriesShape(int)","public Boolean isLabelVisible(int, int)","public void setDefaultShape(Shape)","protected Stroke lookupSeriesOutlineStroke(int)","protected Paint lookupSeriesLabelPaint(int)","public void setDefaultOutlineStroke(Stroke)","public Paint getItemPaint(int, int)","public Stroke getSeriesStroke(int)","public void setDefaultOutlinePaint(Paint)","public Boolean getCreateEntity(int, int)","public Paint getSeriesPaint(int)","public Paint getItemLabelPaint(int, int)","public Paint getDefaultPaint()","public void setDefaultLabelFont(Font)","public void setSeriesCreateEntity(int, Boolean)","public void setSeriesFillPaint(int, Paint)","public void setDefaultLabelPaint(Paint)","public Boolean getDefaultCreateEntity()","public void setDefaultStroke(Stroke)","public Shape getItemShape(int, int)","protected Paint lookupSeriesPaint(int)","public Stroke getSeriesOutlineStroke(int)","protected Boolean lookupSeriesLabelVisible(int)","public void setDefaultCreateEntity(Boolean)","public void setSeriesOutlineStroke(int, Stroke)","protected Stroke lookupSeriesStroke(int)","public Paint getItemOutlinePaint(int, int)","public Stroke getItemOutlineStroke(int, int)","public Stroke getItemStroke(int, int)","protected Paint lookupSeriesFillPaint(int)","public Paint getSeriesLabelPaint(int)","public void setDefaultFillPaint(Paint)","public Stroke getDefaultStroke()","public boolean getAllowNull()","public Paint getItemFillPaint(int, int)","public Boolean getSeriesCreateEntity(int)","public void setSeriesPaint(int, Paint)","public void setSeriesStroke(int, Stroke)","public Font getItemLabelFont(int, int)","public void setSeriesOutlinePaint(int, Paint)","public Font getDefaultLabelFont()"],"org.jfree.chart.util.StrokeList":["private void readObject(ObjectInputStream)","public int hashCode()","private void writeObject(ObjectOutputStream)","public Stroke getStroke(int)","public StrokeList()","public void setStroke(int, Stroke)","public Object clone()","public boolean equals(Object)"],"org.jfree.data.general.AbstractDataset":["private void readObject(ObjectInputStream)","public boolean hasListener(EventListener)","protected AbstractDataset()","private void writeObject(ObjectOutputStream)","public void setGroup(DatasetGroup)","protected void notifyListeners(DatasetChangeEvent)","public void validateObject()","protected void fireDatasetChanged(DatasetChangeInfo)","public Object clone()","public void addChangeListener(DatasetChangeListener)","public void removeChangeListener(DatasetChangeListener)","public DatasetGroup getGroup()"],"org.jfree.chart.LegendItemCollection":["public void addAll(LegendItemCollection)","public Iterator iterator()","public void add(LegendItem)","public Object clone()","public boolean equals(Object)","public LegendItem get(int)","public LegendItemCollection()","public int getItemCount()"],"org.jfree.chart.util.ShapeList":["private void readObject(ObjectInputStream)","public int hashCode()","private void writeObject(ObjectOutputStream)","public Shape getShape(int)","public void setShape(int, Shape)","public Object clone()","public boolean equals(Object)","public ShapeList()"],"org.jfree.data.event.DatasetChangeEvent":["public Dataset getDataset()","public DatasetChangeEvent(Object, Dataset, DatasetChangeInfo)","public DatasetChangeInfo getInfo()"],"org.jfree.chart.util.BooleanList":["public Boolean getBoolean(int)","public void setBoolean(int, Boolean)","public int hashCode()","public BooleanList()","public boolean equals(Object)"],"org.jfree.chart.util.UnitType":["private Object readResolve()","public String toString()","public int hashCode()","private UnitType(String)","public boolean equals(Object)"],"org.jfree.chart.util.AbstractObjectList":["protected AbstractObjectList(int)","protected AbstractObjectList()","public Object clone()","public int size()","protected void set(int, Object)","protected Object get(int)","public void clear()","private void readObject(ObjectInputStream)","protected AbstractObjectList(int, int)","public int hashCode()","protected int indexOf(Object)","private void writeObject(ObjectOutputStream)","public boolean equals(Object)"],"org.jfree.chart.util.ObjectList":["public void set(int, Object)","public ObjectList(int)","public Object get(int)","public int indexOf(Object)","public ObjectList()"],"org.jfree.chart.axis.AxisLocation":["private Object readResolve()","public String toString()","private AxisLocation(String)","public AxisLocation getOpposite()","public boolean equals(Object)","public static AxisLocation getOpposite(AxisLocation)"],"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer":["public void drawDomainLine(Graphics2D, CategoryPlot, Rectangle2D, double, Paint, Stroke)","public CategoryItemLabelGenerator getSeriesItemLabelGenerator(int)","public CategoryToolTipGenerator getBaseToolTipGenerator()","public void setBaseURLGenerator(CategoryURLGenerator, boolean)","public int getRowCount()","public LegendItemCollection getLegendItems()","public int getColumnCount()","protected Point2D calculateRangeMarkerTextAnchorPoint(Graphics2D, PlotOrientation, Rectangle2D, Rectangle2D, RectangleInsets, LengthAdjustmentType, RectangleAnchor)","public boolean hitTest(double, double, Graphics2D, Rectangle2D, CategoryPlot, CategoryAxis, ValueAxis, CategoryDataset, int, int, boolean, CategoryItemRendererState)","public void setSeriesToolTipGenerator(int, CategoryToolTipGenerator)","public void drawAnnotations(Graphics2D, Rectangle2D, CategoryAxis, ValueAxis, Layer, PlotRenderingInfo)","protected void addEntity(EntityCollection, Shape, CategoryDataset, int, int, boolean)","public int getPassCount()","public CategorySeriesLabelGenerator getLegendItemToolTipGenerator()","public DrawingSupplier getDrawingSupplier()","public void setBaseItemLabelGenerator(CategoryItemLabelGenerator, boolean)","public boolean equals(Object)","public Shape createHotSpotShape(Graphics2D, Rectangle2D, CategoryPlot, CategoryAxis, ValueAxis, CategoryDataset, int, int, boolean, CategoryItemRendererState)","public void setSeriesURLGenerator(int, CategoryURLGenerator, boolean)","public void setLegendItemURLGenerator(CategorySeriesLabelGenerator)","public void setSeriesURLGenerator(int, CategoryURLGenerator)","public Range findRangeBounds(CategoryDataset)","public double getItemMiddle(Comparable, Comparable, CategoryDataset, CategoryAxis, Rectangle2D, RectangleEdge)","public LegendItem getLegendItem(int, int)","public void setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator)","public CategoryToolTipGenerator getSeriesToolTipGenerator(int)","public void removeAnnotations()","public boolean removeAnnotation(CategoryAnnotation)","protected ValueAxis getRangeAxis(CategoryPlot, int)","public void addAnnotation(CategoryAnnotation, Layer)","public void setBaseToolTipGenerator(CategoryToolTipGenerator, boolean)","public void setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, boolean)","public void drawBackground(Graphics2D, CategoryPlot, Rectangle2D)","public void setPlot(CategoryPlot)","protected CategoryItemRendererState createState(PlotRenderingInfo)","public CategoryURLGenerator getURLGenerator(int, int, boolean)","public CategoryItemRendererState initialise(Graphics2D, Rectangle2D, CategoryPlot, CategoryDataset, PlotRenderingInfo)","public CategoryToolTipGenerator getToolTipGenerator(int, int, boolean)","protected void drawItemLabel(Graphics2D, PlotOrientation, CategoryDataset, int, int, boolean, double, double, boolean)","public CategoryItemLabelGenerator getItemLabelGenerator(int, int, boolean)","public void addAnnotation(CategoryAnnotation)","public void drawRangeLine(Graphics2D, CategoryPlot, ValueAxis, Rectangle2D, double, Paint, Stroke)","protected Range findRangeBounds(CategoryDataset, boolean)","public Object clone()","public int hashCode()","public void setBaseURLGenerator(CategoryURLGenerator)","protected AbstractCategoryItemRenderer()","public CategoryItemLabelGenerator getBaseItemLabelGenerator()","public void setBaseToolTipGenerator(CategoryToolTipGenerator)","public void setBaseItemLabelGenerator(CategoryItemLabelGenerator)","protected void updateCrosshairValues(CategoryCrosshairState, Comparable, Comparable, double, int, double, double, PlotOrientation)","public void drawDomainMarker(Graphics2D, CategoryPlot, CategoryAxis, CategoryMarker, Rectangle2D)","public CategoryURLGenerator getSeriesURLGenerator(int)","protected Point2D calculateDomainMarkerTextAnchorPoint(Graphics2D, PlotOrientation, Rectangle2D, Rectangle2D, RectangleInsets, LengthAdjustmentType, RectangleAnchor)","public void setSeriesToolTipGenerator(int, CategoryToolTipGenerator, boolean)","public void setLegendItemToolTipGenerator(CategorySeriesLabelGenerator)","protected void addEntity(EntityCollection, Shape, CategoryDataset, int, int, boolean, double, double)","public CategoryPlot getPlot()","public CategorySeriesLabelGenerator getLegendItemURLGenerator()","public CategoryURLGenerator getBaseURLGenerator()","protected CategoryAxis getDomainAxis(CategoryPlot, CategoryDataset)","public void drawRangeMarker(Graphics2D, CategoryPlot, ValueAxis, Marker, Rectangle2D)","public Rectangle2D createHotSpotBounds(Graphics2D, Rectangle2D, CategoryPlot, CategoryAxis, ValueAxis, CategoryDataset, int, int, boolean, CategoryItemRendererState, Rectangle2D)","public void drawOutline(Graphics2D, CategoryPlot, Rectangle2D)","public CategorySeriesLabelGenerator getLegendItemLabelGenerator()","public void setLegendItemLabelGenerator(CategorySeriesLabelGenerator)"],"org.jfree.chart.labels.StandardCategorySeriesLabelGenerator":["public StandardCategorySeriesLabelGenerator()","public int hashCode()","public Object clone()","public StandardCategorySeriesLabelGenerator(String)","public boolean equals(Object)","protected Object[] createItemArray(CategoryDataset, int)","public String generateLabel(CategoryDataset, int)"],"org.jfree.data.general.DatasetGroup":["public DatasetGroup()","public Object clone()","public boolean equals(Object)","public String getID()","public DatasetGroup(String)"],"org.jfree.chart.event.ChartChangeEventType":["private Object readResolve()","public String toString()","public int hashCode()","private ChartChangeEventType(String)","public boolean equals(Object)"],"org.jfree.chart.plot.DefaultDrawingSupplier":["public DefaultDrawingSupplier()","public DefaultDrawingSupplier(Paint[], Paint[], Stroke[], Stroke[], Shape[])","public static Shape[] createStandardSeriesShapes()","private static int[] intArray(double, double, double)","public Paint getNextFillPaint()","private static int[] intArray(double, double, double, double)","public Object clone()","private void readObject(ObjectInputStream)","public Paint getNextPaint()","public Stroke getNextStroke()","private void writeObject(ObjectOutputStream)","public Paint getNextOutlinePaint()","public Shape getNextShape()","public Stroke getNextOutlineStroke()","public DefaultDrawingSupplier(Paint[], Paint[], Paint[], Stroke[], Stroke[], Shape[])","public boolean equals(Object)","private boolean equalShapes(Shape[], Shape[])"],"org.jfree.chart.event.ChartChangeEvent":["public void setChart(JFreeChart)","public ChartChangeEventType getType()","public ChartChangeEvent(Object, JFreeChart, ChartChangeEventType)","public ChartChangeEvent(Object, JFreeChart)","public ChartChangeEvent(Object)","public JFreeChart getChart()","public void setType(ChartChangeEventType)"],"org.jfree.chart.labels.ItemLabelPosition":["public TextAnchor getTextAnchor()","public ItemLabelPosition(ItemLabelAnchor, TextAnchor, TextAnchor, double)","public ItemLabelPosition()","public ItemLabelPosition(ItemLabelAnchor, TextAnchor)","public ItemLabelAnchor getItemLabelAnchor()","public double getAngle()","public boolean equals(Object)","public TextAnchor getRotationAnchor()"],"org.jfree.chart.renderer.category.LineAndShapeRenderer":["public void setSeriesLinesVisible(int, Boolean)","public void setBaseLinesVisible(boolean)","public void setSeriesShapesVisible(int, boolean)","public Object clone()","public void setSeriesLinesVisible(int, boolean)","public void setItemMargin(double)","public boolean getItemShapeVisible(int, int)","public void setSeriesShapesVisible(int, Boolean)","public boolean getUseSeriesOffset()","public int getPassCount()","public void setUseOutlinePaint(boolean)","public LineAndShapeRenderer()","public void drawItem(Graphics2D, CategoryItemRendererState, Rectangle2D, CategoryPlot, CategoryAxis, ValueAxis, CategoryDataset, int, int, boolean, int)","public boolean equals(Object)","public void setBaseShapesVisible(boolean)","public boolean getItemShapeFilled(int, int)","public void setUseFillPaint(boolean)","public LegendItem getLegendItem(int, int)","public boolean getDrawOutlines()","public boolean getUseOutlinePaint()","public double getItemMargin()","public Boolean getSeriesLinesVisible(int)","public Boolean getSeriesShapesFilled(int)","public void setSeriesShapesFilled(int, boolean)","public LineAndShapeRenderer(boolean, boolean)","public boolean getBaseLinesVisible()","public void setSeriesShapesFilled(int, Boolean)","public boolean getItemLineVisible(int, int)","public Boolean getSeriesShapesVisible(int)","public void setDrawOutlines(boolean)","public boolean getBaseShapesVisible()","public boolean getUseFillPaint()","public void setUseSeriesOffset(boolean)","public boolean getBaseShapesFilled()","public void setBaseShapesFilled(boolean)"],"org.jfree.chart.plot.CategoryPlot":["protected void drawDomainMarkers(Graphics2D, Rectangle2D, int, Layer)","public void zoomDomainAxes(double, PlotRenderingInfo, Point2D)","public void addRangeMarker(Marker, Layer)","public SortOrder getColumnRenderingOrder()","public void setDomainAxes(CategoryAxis[])","public void setRangeMinorGridlinesVisible(boolean)","private void readObject(ObjectInputStream)","public void setOrientation(PlotOrientation)","public CategoryItemRenderer getRenderer(int)","public ValueAxis getRangeAxisForDataset(int)","public boolean equals(Object)","public String getPlotType()","public void configureDomainAxes()","public void setFixedRangeAxisSpace(AxisSpace, boolean)","public void setRangeAxis(int, ValueAxis, boolean)","protected void drawRangeGridlines(Graphics2D, Rectangle2D, List)","public void setDomainAxisLocation(AxisLocation)","public void setRangeGridlineStroke(Stroke)","public Collection getRangeMarkers(Layer)","public boolean isRangeCrosshairLockedOnData()","public void setDomainCrosshairVisible(boolean)","public void setDomainCrosshairColumnKey(Comparable, boolean)","public double getRangeCrosshairValue()","public void setRangeCrosshairValue(double, boolean)","public void setRangeAxisLocation(AxisLocation)","public void setFixedLegendItems(LegendItemCollection)","public void setDomainAxisLocation(int, AxisLocation)","public void setRangeZeroBaselineVisible(boolean)","public void setDomainGridlinesVisible(boolean)","public void setDomainAxis(int, CategoryAxis)","public boolean removeRangeMarker(int, Marker, Layer, boolean)","public boolean isDomainZoomable()","public CategoryDataset getDataset()","public Object clone()","public void setRangeCrosshairValue(double)","public void setDomainCrosshairPaint(Paint)","public void setShadowGenerator(ShadowGenerator)","public int getDomainAxisCount()","protected void drawRangeLine(Graphics2D, Rectangle2D, double, Stroke, Paint)","public void setRangeZeroBaselineStroke(Stroke)","public void clearDomainAxes()","public RectangleEdge getRangeAxisEdge()","public Stroke getRangeZeroBaselineStroke()","private List datasetsMappedToDomainAxis(int)","public void clearRangeMarkers(int)","protected AxisSpace calculateRangeAxisSpace(Graphics2D, Rectangle2D, AxisSpace)","public Comparable getDomainCrosshairColumnKey()","public Paint getDomainGridlinePaint()","public void setRangeAxis(ValueAxis)","public void setDomainAxis(CategoryAxis)","public void addAnnotation(CategoryAnnotation, boolean)","public int getCrosshairDatasetIndex()","public ShadowGenerator getShadowGenerator()","public boolean removeDomainMarker(Marker, Layer)","public void setRowRenderingOrder(SortOrder)","public void setDomainAxisLocation(AxisLocation, boolean)","public SortOrder getRowRenderingOrder()","public void select(GeneralPath, Rectangle2D, RenderingSource)","public boolean removeRangeMarker(Marker, Layer)","public Paint getDomainCrosshairPaint()","public boolean isRangeZoomable()","public int getRangeAxisIndex(ValueAxis)","public void setRangeAxis(int, ValueAxis)","public boolean isDomainPannable()","public void addRangeMarker(int, Marker, Layer, boolean)","protected Map drawAxes(Graphics2D, Rectangle2D, Rectangle2D, PlotRenderingInfo)","public AxisLocation getDomainAxisLocation()","public void setRangeCrosshairStroke(Stroke)","public void draw(Graphics2D, Rectangle2D, Point2D, PlotState, PlotRenderingInfo)","public boolean removeAnnotation(CategoryAnnotation)","public CategoryAxis getDomainAxis()","public void zoomRangeAxes(double, double, PlotRenderingInfo, Point2D)","public void setRangeGridlinePaint(Paint)","public boolean isDomainCrosshairVisible()","public void panDomainAxes(double, PlotRenderingInfo, Point2D)","public Stroke getDomainCrosshairStroke()","public void clearRangeAxes()","public boolean removeDomainMarker(int, Marker, Layer, boolean)","public void setDomainCrosshairRowKey(Comparable, boolean)","public Paint getRangeCrosshairPaint()","public boolean canSelectByPoint()","public void zoomRangeAxes(double, PlotRenderingInfo, Point2D, boolean)","public PlotOrientation getOrientation()","public RectangleEdge getDomainAxisEdge()","public void setDatasetRenderingOrder(DatasetRenderingOrder)","public void setDataset(CategoryDataset)","public void setColumnRenderingOrder(SortOrder)","public void addAnnotation(CategoryAnnotation)","public void drawBackground(Graphics2D, Rectangle2D)","public boolean removeRangeMarker(int, Marker, Layer)","public LegendItemCollection getFixedLegendItems()","public Comparable getDomainCrosshairRowKey()","public void addRangeMarker(Marker)","public void setDomainGridlinePosition(CategoryAnchor)","public void addDomainMarker(int, CategoryMarker, Layer)","public void setFixedRangeAxisSpace(AxisSpace)","public void setDomainGridlineStroke(Stroke)","public void setAxisOffset(RectangleInsets)","public void addDomainMarker(CategoryMarker, Layer)","protected void drawRangeCrosshair(Graphics2D, Rectangle2D, PlotOrientation, double, ValueAxis, Stroke, Paint)","public void mapDatasetToRangeAxes(int, List)","public int getDatasetCount()","public void clearDomainMarkers(int)","public CategoryAxis getDomainAxisForDataset(int)","public int getRendererCount()","public void setDomainCrosshairStroke(Stroke)","protected AxisSpace calculateDomainAxisSpace(Graphics2D, Rectangle2D, AxisSpace)","public AxisLocation getDomainAxisLocation(int)","public boolean removeAnnotation(CategoryAnnotation, boolean)","public Collection getDomainMarkers(Layer)","public void setRangeAxisLocation(int, AxisLocation, boolean)","private Map cloneMarkerMap(Map)","public void mapDatasetToDomainAxes(int, List)","public int getIndexOf(CategoryItemRenderer)","public CategoryItemRenderer getRenderer()","public void setWeight(int)","public List getCategoriesForAxis(CategoryAxis)","public void setRangeMinorGridlineStroke(Stroke)","private List datasetsMappedToRangeAxis(int)","public void setDataset(int, CategoryDataset)","public void setRangeCrosshairVisible(boolean)","public CategoryAxis getDomainAxis(int)","public void setRangeAxisLocation(int, AxisLocation)","protected void drawZeroRangeBaseline(Graphics2D, Rectangle2D)","public Range getDataRange(ValueAxis)","private void checkAxisIndices(List)","public void mapDatasetToRangeAxis(int, int)","public CategoryAnchor getDomainGridlinePosition()","public Stroke getRangeGridlineStroke()","public void zoom(double)","public void handleClick(int, int, PlotRenderingInfo)","public boolean isRangeCrosshairVisible()","protected void drawDomainGridlines(Graphics2D, Rectangle2D)","public void setRangeGridlinesVisible(boolean)","public void annotationChanged(AnnotationChangeEvent)","public ValueAxis getRangeAxis()","protected void drawDomainCrosshair(Graphics2D, Rectangle2D, PlotOrientation, int, Comparable, Comparable, Stroke, Paint)","public void mapDatasetToDomainAxis(int, int)","public void panRangeAxes(double, PlotRenderingInfo, Point2D)","public Collection getRangeMarkers(int, Layer)","public RectangleEdge getDomainAxisEdge(int)","public void setAnchorValue(double)","public boolean getDrawSharedDomainAxis()","public ValueAxis getRangeAxis(int)","public void clearRangeMarkers()","public void setDomainGridlinePaint(Paint)","public void configureRangeAxes()","public Paint getRangeGridlinePaint()","public void setRangeMinorGridlinePaint(Paint)","public boolean removeDomainMarker(Marker)","public void setRangeAxes(ValueAxis[])","public AxisSpace getFixedDomainAxisSpace()","public void setFixedDomainAxisSpace(AxisSpace)","private Rectangle integerise(Rectangle2D)","public AxisLocation getRangeAxisLocation()","public void setDomainAxis(int, CategoryAxis, boolean)","public void select(double, double, Rectangle2D, RenderingSource)","public DatasetRenderingOrder getDatasetRenderingOrder()","public boolean removeDomainMarker(int, Marker, Layer)","public CategoryPlot()","public boolean isDomainGridlinesVisible()","public double getAnchorValue()","public void addDomainMarker(CategoryMarker)","public CategoryDataset getDataset(int)","public CategoryPlot(CategoryDataset, CategoryAxis, ValueAxis, CategoryItemRenderer)","public boolean isRangeZeroBaselineVisible()","public void datasetChanged(DatasetChangeEvent)","public LegendItemCollection getLegendItems()","public RectangleEdge getRangeAxisEdge(int)","public int getDomainAxisIndex(CategoryAxis)","public void zoomRangeAxes(double, PlotRenderingInfo, Point2D)","public void setDomainCrosshairColumnKey(Comparable)","public Stroke getDomainGridlineStroke()","public void setDrawSharedDomainAxis(boolean)","public void setFixedDomainAxisSpace(AxisSpace, boolean)","public boolean isRangeMinorGridlinesVisible()","public int indexOf(CategoryDataset)","public void addDomainMarker(int, CategoryMarker, Layer, boolean)","public void zoomDomainAxes(double, double, PlotRenderingInfo, Point2D)","public void setRenderer(CategoryItemRenderer, boolean)","public void setCrosshairDatasetIndex(int)","public void setRangeAxisLocation(AxisLocation, boolean)","public int getRangeAxisCount()","public void setDomainAxisLocation(int, AxisLocation, boolean)","public void setRangeZeroBaselinePaint(Paint)","public void setAnchorValue(double, boolean)","public Stroke getRangeMinorGridlineStroke()","public Paint getRangeMinorGridlinePaint()","public void rendererChanged(RendererChangeEvent)","public Stroke getRangeCrosshairStroke()","public List getCategories()","public void setRenderer(int, CategoryItemRenderer)","public boolean isRangeGridlinesVisible()","public int getWeight()","public void setDomainCrosshairRowKey(Comparable)","public void setCrosshairDatasetIndex(int, boolean)","public void setRangeCrosshairPaint(Paint)","public boolean isRangePannable()","public Paint getRangeZeroBaselinePaint()","public RectangleInsets getAxisOffset()","public void setRangePannable(boolean)","protected void drawAnnotations(Graphics2D, Rectangle2D, PlotRenderingInfo)","private void writeObject(ObjectOutputStream)","public AxisLocation getRangeAxisLocation(int)","public CategoryItemRenderer getRendererForDataset(CategoryDataset)","public void setRangeCrosshairLockedOnData(boolean)","private CategoryDatasetSelectionState findSelectionStateForDataset(CategoryDataset, Object)","protected AxisSpace calculateAxisSpace(Graphics2D, Rectangle2D)","public void setRenderer(int, CategoryItemRenderer, boolean)","public boolean canSelectByRegion()","public void zoomDomainAxes(double, PlotRenderingInfo, Point2D, boolean)","public boolean removeRangeMarker(Marker)","public void clearDomainMarkers()","public void addRangeMarker(int, Marker, Layer)","public void clearAnnotations()","public void setRenderer(CategoryItemRenderer)","public void setRenderers(CategoryItemRenderer[])","public AxisSpace getFixedRangeAxisSpace()","public boolean render(Graphics2D, Rectangle2D, int, PlotRenderingInfo, CategoryCrosshairState)","protected void drawRangeMarkers(Graphics2D, Rectangle2D, int, Layer)","public List getAnnotations()","public void clearSelection()","public Collection getDomainMarkers(int, Layer)"],"org.jfree.data.KeyedObjects2D":["public Object getObject(int, int)","public int getRowIndex(Comparable)","public void removeColumn(int)","public int getColumnIndex(Comparable)","public Comparable getRowKey(int)","public KeyedObjects2D()","public Object clone()","public int getRowCount()","public Comparable getColumnKey(int)","public void setObject(Object, Comparable, Comparable)","public void removeRow(int)","public void clear()","public int getColumnCount()","public Object getObject(Comparable, Comparable)","public int hashCode()","public void removeObject(Comparable, Comparable)","public void removeColumn(Comparable)","public boolean equals(Object)","public List getRowKeys()","public List getColumnKeys()","public void addObject(Object, Comparable, Comparable)","public void removeRow(Comparable)"],"org.jfree.chart.axis.CategoryAnchor":["private Object readResolve()","public String toString()","private CategoryAnchor(String)","public boolean equals(Object)"],"org.jfree.data.SelectableValue":["public void setSelected(boolean)","public SelectableValue(Number)","public SelectableValue(Number, boolean)","public Number getValue()","public boolean isSelected()"],"org.jfree.chart.plot.DatasetRenderingOrder":["private Object readResolve()","public String toString()","public int hashCode()","public boolean equals(Object)","private DatasetRenderingOrder(String)"],"org.jfree.chart.plot.Plot":["public void setNoDataMessagePaint(Paint)","protected void drawNoDataMessage(Graphics2D, Rectangle2D)","public void setInsets(RectangleInsets)","public Paint getOutlinePaint()","public void setOutlineStroke(Stroke)","public void removeChangeListener(PlotChangeListener)","public Image getBackgroundImage()","public void datasetChanged(DatasetChangeEvent)","public static RectangleEdge resolveRangeAxisLocation(AxisLocation, PlotOrientation)","public float getBackgroundImageAlpha()","public LegendItemCollection getLegendItems()","protected void createAndAddEntity(Rectangle2D, PlotRenderingInfo, String, String)","public void setBackgroundImageAlignment(int)","public void drawOutline(Graphics2D, Rectangle2D)","public Plot getRootPlot()","private void readObject(ObjectInputStream)","public boolean isNotify()","public void markerChanged(MarkerChangeEvent)","public void drawBackgroundImage(Graphics2D, Rectangle2D)","public DrawingSupplier getDrawingSupplier()","public void setBackgroundImage(Image)","public int getBackgroundImageAlignment()","public boolean equals(Object)","public String getNoDataMessage()","public Plot getParent()","protected double getRectY(double, double, double, RectangleEdge)","public void setOutlineVisible(boolean)","public float getBackgroundAlpha()","protected double getRectX(double, double, double, RectangleEdge)","public void notifyListeners(PlotChangeEvent)","public void zoom(double)","public void setBackgroundAlpha(float)","protected Plot()","public Paint getNoDataMessagePaint()","public void handleClick(int, int, PlotRenderingInfo)","public Paint getBackgroundPaint()","public void annotationChanged(AnnotationChangeEvent)","public void setNoDataMessageFont(Font)","protected void fillBackground(Graphics2D, Rectangle2D, PlotOrientation)","public void setForegroundAlpha(float)","public void setBackgroundPaint(Paint)","protected void fireChangeEvent()","public Object clone()","public void setDrawingSupplier(DrawingSupplier, boolean)","public void drawBackground(Graphics2D, Rectangle2D)","public void setNoDataMessage(String)","public void axisChanged(AxisChangeEvent)","public boolean isSubplot()","protected void fillBackground(Graphics2D, Rectangle2D)","private void writeObject(ObjectOutputStream)","public void setParent(Plot)","public void setDrawingSupplier(DrawingSupplier)","public void setOutlinePaint(Paint)","public void addChangeListener(PlotChangeListener)","public DatasetGroup getDatasetGroup()","public void setInsets(RectangleInsets, boolean)","protected void setDatasetGroup(DatasetGroup)","public float getForegroundAlpha()","public boolean isOutlineVisible()","public RectangleInsets getInsets()","public void setBackgroundImageAlpha(float)","public void setNotify(boolean)","public static RectangleEdge resolveDomainAxisLocation(AxisLocation, PlotOrientation)","public Font getNoDataMessageFont()","public Stroke getOutlineStroke()"],"org.jfree.chart.event.PlotChangeEvent":["public Plot getPlot()","public PlotChangeEvent(Plot)"],"org.jfree.data.KeyedObject":["public KeyedObject(Comparable, Object)","public Object getObject()","public Object clone()","public boolean equals(Object)","public Comparable getKey()","public void setObject(Object)"],"org.jfree.chart.util.RectangleInsets":["public double extendWidth(double)","public RectangleInsets(UnitType, double, double, double, double)","public RectangleInsets(double, double, double, double)","public Rectangle2D createInsetRectangle(Rectangle2D, boolean, boolean)","public Rectangle2D createOutsetRectangle(Rectangle2D)","public double calculateTopOutset(double)","public double getLeft()","public double calculateRightOutset(double)","public void trim(Rectangle2D)","public String toString()","public Rectangle2D createInsetRectangle(Rectangle2D)","public int hashCode()","public double calculateLeftOutset(double)","public double calculateBottomInset(double)","public double calculateLeftInset(double)","public Rectangle2D createAdjustedRectangle(Rectangle2D, LengthAdjustmentType, LengthAdjustmentType)","public boolean equals(Object)","public double calculateTopInset(double)","public double getTop()","public double trimHeight(double)","public double getBottom()","public double extendHeight(double)","public Rectangle2D createOutsetRectangle(Rectangle2D, boolean, boolean)","public double trimWidth(double)","public RectangleInsets()","public UnitType getUnitType()","public double getRight()","public double calculateBottomOutset(double)","public double calculateRightInset(double)"],"org.jfree.chart.util.ResourceBundleWrapper":["private ResourceBundleWrapper()","public static void removeCodeBase(URL, URLClassLoader)","public static ResourceBundle getBundle(String, Locale, ClassLoader)","public static final ResourceBundle getBundle(String, Locale)","public static final ResourceBundle getBundle(String)"],"org.jfree.chart.util.PaintList":["private void readObject(ObjectInputStream)","public PaintList()","public int hashCode()","private void writeObject(ObjectOutputStream)","public void setPaint(int, Paint)","public boolean equals(Object)","public Paint getPaint(int)"],"org.jfree.chart.labels.ItemLabelAnchor":["private Object readResolve()","public String toString()","private ItemLabelAnchor(String)","public boolean equals(Object)"]}